vector<int> topKFrequent(vector<int>& nums, int k) {
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> minh;
        vector<int> ans;
        unordered_map<int,int> mpp;
        for(auto it:nums) mpp[it]++;

        //pushing hash element to heap...
        for(auto it:mpp){
            minh.push(make_pair(it.second,it.first));
            if(minh.size()>k) minh.pop();
        }
        
        while(!minh.empty()){
            ans.push_back(minh.top().second);
            minh.pop();
        }
        return ans;
        
    }
